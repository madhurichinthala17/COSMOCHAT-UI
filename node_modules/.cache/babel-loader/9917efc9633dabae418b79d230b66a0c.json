{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\COSMOCHAT-UI\\\\cosmochatui\\\\src\\\\App.js\";\nimport { ChatContainer, MainContainer, Message, MessageInput, MessageList, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport React, { useState } from 'react';\nimport './App.css';\nconst API_KEY = \"sk-None-D5lH5Bi5CZOzitfWuXiJT3BlbkFJKfXbg2qxC6EAVpiuSiDb\";\nconst [chatStarted, setChatStarted] = useState(false);\nfunction App() {\n  const [typing, setTyping] = useState(false);\n  const [messages, setMessages] = useState([{\n    message: \"Hello,Iam ChatGPT\",\n    sender: \"CHATGPT\",\n    direction: \"incoming\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n    const newMessages = [...messages, newMessage];\n    setMessages(newMessages);\n    setTyping(true);\n    await processMessageToChatGPT(newMessages);\n  };\n  async function processMessageToChatGPT(chatMessages) {\n    let apiMessage = chatMessages.map(messageObject => {\n      let role = \"\";\n      if (messageObject.sender === \"ChatGPT\") {\n        role = \"assistant\";\n      } else {\n        role = \"user\";\n      }\n      return {\n        role: role,\n        content: messageObject.message\n      };\n    });\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like Iam 10 years old.\"\n    };\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [systemMessage, ...apiMessage]\n    };\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + API_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(data => {\n      return data.json();\n    }).then(data => {\n      console.log(data);\n      console.log(data.choices[0].message.content);\n      setMessages([...chatMessages, {\n        message: data.choices[0].message.content,\n        sender: \"ChatGPT\"\n      }]);\n      setTyping(false);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"center\",\n      height: \"600px\",\n      width: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, chatStarted ? /*#__PURE__*/React.createElement(ChatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MessageList, {\n    scrollBehavior: \"smooth\",\n    typingIndicator: typing ? /*#__PURE__*/React.createElement(TypingIndicator, {\n      content: \"ChatGPT is Typing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 76\n      }\n    }) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(Message, {\n    key: i,\n    model: {\n      message: message.message,\n      direction: message.direction\n    },\n    className: message.direction === \"incoming\" ? \"incoming-message\" : \"outgoing-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(MessageInput, {\n    placeholder: \"Type message here\",\n    onSend: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChatStarted(true),\n    style: {\n      padding: '10px 20px',\n      marginTop: '10px',\n      visibility: chatStarted ? 'hidden' : 'visible'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Start Chat\"))));\n}\nexport default App;","map":{"version":3,"names":["ChatContainer","MainContainer","Message","MessageInput","MessageList","TypingIndicator","React","useState","API_KEY","chatStarted","setChatStarted","App","typing","setTyping","messages","setMessages","message","sender","direction","handleSend","newMessage","newMessages","processMessageToChatGPT","chatMessages","apiMessage","map","messageObject","role","content","systemMessage","apiRequestBody","fetch","method","headers","body","JSON","stringify","then","data","json","console","log","choices","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","width","scrollBehavior","typingIndicator","i","key","model","placeholder","onSend","onClick","padding","marginTop","visibility"],"sources":["C:/Users/madhu/COSMOCHAT-UI/cosmochatui/src/App.js"],"sourcesContent":["import { ChatContainer, MainContainer, Message, MessageInput, MessageList, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst API_KEY = \"sk-None-D5lH5Bi5CZOzitfWuXiJT3BlbkFJKfXbg2qxC6EAVpiuSiDb\";\nconst [chatStarted, setChatStarted] = useState(false);\nfunction App() {\n  const[typing,setTyping]=useState(false);\n  const[messages,setMessages]=useState([\n    {\n      message: \"Hello,Iam ChatGPT\",\n      sender : \"CHATGPT\",\n      direction :\"incoming\"\n      \n    }\n  ]);\n\n\n  const handleSend=async(message) =>{\n    const newMessage={\n      message : message,\n      sender : \"user\",\n      direction:\"outgoing\"\n    }\n\n    const newMessages=[...messages,newMessage];\n    setMessages(newMessages);\n\n    setTyping(true);\n\n    await processMessageToChatGPT(newMessages);\n\n  }\n\n  async function processMessageToChatGPT(chatMessages)\n  {\n    let apiMessage=chatMessages.map((messageObject) =>\n    {\n      let role=\"\";\n      if(messageObject.sender === \"ChatGPT\")\n      {\n        role=\"assistant\"\n      }else\n      {\n        role=\"user\"\n      }\n\n      return{role : role,content : messageObject.message}\n    });\n\n    const systemMessage={\n      role : \"system\",\n      content : \"Explain all concepts like Iam 10 years old.\"\n    }\n    const apiRequestBody ={\n\n      \"model\":\"gpt-3.5-turbo\",\n      \"messages\":[\n        systemMessage,\n        ...apiMessage\n      ]\n    \n    }\n\n    await fetch(\"https://api.openai.com/v1/chat/completions\",{\n\n      method:\"POST\",\n      headers:{\n        \"Authorization\": \"Bearer \" + API_KEY,\n        \"Content-Type\" : \"application/json\"\n      },\n\n      body : JSON.stringify(apiRequestBody)\n    }).then((data) => {\n      return data.json();\n    }).then((data) =>{\n      console.log(data);\n      console.log(data.choices[0].message.content);\n      setMessages(\n        [\n          ...chatMessages,{\n            message : data.choices[0].message.content,\n            sender : \"ChatGPT\"\n          }\n        ]\n      );\n      setTyping(false);\n    });\n  }\n  return (\n    <div className=\"App\">\n    <div style={{ position: \"center\", height: \"600px\", width: \"600px\" }}>\n      <MainContainer>\n        {chatStarted ? (\n          <ChatContainer>\n            <MessageList scrollBehavior=\"smooth\" typingIndicator={typing ? <TypingIndicator content=\"ChatGPT is Typing\" /> : null}>\n              {messages.map((message, i) => (\n                <Message key={i} model={{ message: message.message, direction: message.direction }}\n                  className={message.direction === \"incoming\" ? \"incoming-message\" : \"outgoing-message\"} />\n              ))}\n            </MessageList>\n            <MessageInput placeholder=\"Type message here\" onSend={handleSend} />\n          </ChatContainer>\n        ) : null}\n        <button onClick={() => setChatStarted(true)} style={{ padding: '10px 20px', marginTop: '10px', visibility: chatStarted ? 'hidden' : 'visible' }}>\n          Start Chat\n        </button>\n      </MainContainer>\n    </div>\n  </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}