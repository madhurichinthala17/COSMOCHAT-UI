{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\COSMOCHAT-UI\\\\cosmochatui\\\\src\\\\App.js\";\nimport { ChatContainer, MainContainer, Message, MessageInput, MessageList, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport React, { useState } from 'react';\nimport './App.css';\nfunction App() {\n  const [chatStarted, setChatStarted] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [messages, setMessages] = useState([{\n    message: \"Hello, I am ChatGPT\",\n    sender: \"CHATGPT\",\n    direction: \"incoming\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n    const newMessages = [...messages, newMessage];\n    setMessages(newMessages);\n    setTyping(true);\n    await processMessageToChatGPT(newMessages);\n  };\n  async function processMessageToChatGPT(chatMessages) {\n    const apiMessage = chatMessages.map(messageObject => ({\n      role: messageObject.sender === \"ChatGPT\" ? \"assistant\" : \"user\",\n      content: messageObject.message\n    }));\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am 10 years old.\"\n    };\n    const apiRequestBody = {\n      model: \"gpt-3.5-turbo\",\n      messages: [systemMessage, ...apiMessage]\n    };\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer your_api_key\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(apiRequestBody)\n      });\n      if (!response.ok) {\n        throw new Error('HTTP error', response.status);\n      }\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        message: data.choices[0].message.content,\n        sender: \"ChatGPT\"\n      }]);\n    } catch (error) {\n      console.error(\"Failed to fetch or parse:\", error);\n    } finally {\n      setTyping(false);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"center\",\n      height: \"600px\",\n      width: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainContainer, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatContainer, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MessageList, {\n    scrollBehavior: \"smooth\",\n    typingIndicator: typing ? /*#__PURE__*/React.createElement(TypingIndicator, {\n      content: \"ChatGPT is Typing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 76\n      }\n    }) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(Message, {\n    key: i,\n    model: {\n      message: message.message,\n      direction: message.direction\n    },\n    className: message.direction === \"incoming\" ? \"incoming-message\" : \"outgoing-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }))), chatStarted && /*#__PURE__*/React.createElement(MessageInput, {\n    placeholder: \"Type message here\",\n    onSend: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), !chatStarted && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChatStarted(true),\n    style: {\n      padding: '10px 30px',\n      width: '100%',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Start Chat\"))));\n}\nexport default App;","map":{"version":3,"names":["ChatContainer","MainContainer","Message","MessageInput","MessageList","TypingIndicator","React","useState","App","chatStarted","setChatStarted","typing","setTyping","messages","setMessages","message","sender","direction","handleSend","newMessage","newMessages","processMessageToChatGPT","chatMessages","apiMessage","map","messageObject","role","content","systemMessage","apiRequestBody","model","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","prevMessages","choices","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","width","display","flexDirection","flex","scrollBehavior","typingIndicator","i","key","placeholder","onSend","onClick","padding"],"sources":["C:/Users/madhu/COSMOCHAT-UI/cosmochatui/src/App.js"],"sourcesContent":["import { ChatContainer, MainContainer, Message, MessageInput, MessageList, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [chatStarted, setChatStarted] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [messages, setMessages] = useState([\n    {\n      message: \"Hello, I am ChatGPT\",\n      sender: \"CHATGPT\",\n      direction: \"incoming\",\n      \n    }\n  ]);\n\n  const handleSend = async (message) => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n\n    const newMessages = [...messages, newMessage];\n    setMessages(newMessages);\n    setTyping(true);\n    await processMessageToChatGPT(newMessages);\n  };\n\n  async function processMessageToChatGPT(chatMessages) {\n    const apiMessage = chatMessages.map((messageObject) => ({\n      role: messageObject.sender === \"ChatGPT\" ? \"assistant\" : \"user\",\n      content: messageObject.message\n    }));\n\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am 10 years old.\"\n    };\n\n    const apiRequestBody = {\n      model: \"gpt-3.5-turbo\",\n      messages: [systemMessage, ...apiMessage]\n    };\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer your_api_key\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(apiRequestBody)\n      });\n\n      if (!response.ok) {\n        throw new Error('HTTP error', response.status);\n      }\n\n      const data = await response.json();\n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          message: data.choices[0].message.content,\n          sender: \"ChatGPT\"\n        }\n      ]);\n    } catch (error) {\n      console.error(\"Failed to fetch or parse:\", error);\n    } finally {\n      setTyping(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: \"center\", height: \"600px\", width: \"600px\" }}>\n        <MainContainer style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n          <ChatContainer style={{ flex: 9 }}>\n            <MessageList scrollBehavior=\"smooth\" typingIndicator={typing ? <TypingIndicator content=\"ChatGPT is Typing\" /> : null}>\n              {messages.map((message, i) => (\n                <Message key={i} model={{ message: message.message, direction: message.direction }}\n                  className={message.direction === \"incoming\" ? \"incoming-message\" : \"outgoing-message\"} />\n              ))}\n            </MessageList>\n            {chatStarted && (\n              <MessageInput placeholder=\"Type message here\" onSend={handleSend} />\n            )}\n          </ChatContainer>\n          {!chatStarted && (\n            <button onClick={() => setChatStarted(true)} style={{ padding: '10px 30px', width: '100%', flex: 1}}>\n              Start Chat\n            </button>\n          )}\n        </MainContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}